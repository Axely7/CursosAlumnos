@page "/ListaCursos"
@using BlazorServer.Servicios;
@using ModeloClasesAlumnos;
@inject IServicioCursos ServicioCurso

<h3>Lista Cursos</h3>

<div class="form-group row">
    <div class="col-sm-10">
        <a href="/NuevoCurso" class="btn btn-primary m-1">Nuevo Curso</a>
    </div>
</div>


@if (listaCursos == null)
{
    <div class="spinner"></div>
}
else if (listaCursos.Count == 0)
{
    <p class="text-danger">No hay cursos disponibles</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th><strong>Nombre Curso</strong></th>
                <th><strong>Coste</strong></th>
                <th><strong>F. Inicio Precio</strong></th>
                <th><strong>F. Fin Precio</strong></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Curso c in listaCursos)
                @foreach (Precio p in c.ListaPrecios)
                {
                    <tr>
                        <td>@c.NombreCurso</td>
                        <td class="text-success"><strong>$@p.Coste</strong></td>
                        <td>@p.FechaInicio.ToString("dd/MM/yyyy")</td>
                        <td>@p.FechaFin.ToString("dd/MM/yyyy")</td>
                        <td>
                            <input type="submit" class="btn btn-primary" value="Modificar"/>
                        </td>
                        <td>
                            <input type="submit" class="btn btn-danger" value="Eliminar"/>
                        </td>
                    </tr>
                }
        </tbody>

    </table>

}


@code {
    public List<Curso> listaCursos { get; set; } = new List<Curso>();

    //Recordar que pasando -1 nos devolvia todos los cursos sin filtrar por alumno
    protected override async Task OnInitializedAsync()
    {
        listaCursos = (await ServicioCurso.DameCursos(-1)).ToList();
    }
}
